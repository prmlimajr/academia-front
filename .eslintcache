[{"C:\\academia-front\\src\\index.js":"1","C:\\academia-front\\src\\App.js":"2","C:\\academia-front\\src\\routes\\index.js":"3","C:\\academia-front\\src\\routes\\PrivateRoute.js":"4","C:\\academia-front\\src\\pages\\SignIn\\index.js":"5","C:\\academia-front\\src\\pages\\Home\\index.js":"6","C:\\academia-front\\src\\pages\\SignUp\\index.js":"7","C:\\academia-front\\src\\pages\\Profile\\UserProfile\\index.js":"8","C:\\academia-front\\src\\pages\\Profile\\InstructorProfile\\index.js":"9","C:\\academia-front\\src\\services\\auth.js":"10","C:\\academia-front\\src\\components\\Sidebar\\index.js":"11","C:\\academia-front\\src\\api\\auth.js":"12","C:\\academia-front\\src\\components\\Input\\index.js":"13","C:\\academia-front\\src\\components\\Button\\index.js":"14","C:\\academia-front\\src\\components\\AthleteCard\\index.js":"15","C:\\academia-front\\src\\components\\Checkbox\\index.js":"16","C:\\academia-front\\src\\components\\TextArea\\index.js":"17","C:\\academia-front\\src\\components\\RadioButton\\index.js":"18","C:\\academia-front\\src\\services\\api.js":"19","C:\\academia-front\\src\\utils\\index.js":"20","C:\\academia-front\\src\\pages\\Quiz\\index.js":"21"},{"size":230,"mtime":1609278864779,"results":"22","hashOfConfig":"23"},{"size":128,"mtime":1609278864699,"results":"24","hashOfConfig":"23"},{"size":908,"mtime":1609285797173,"results":"25","hashOfConfig":"23"},{"size":753,"mtime":1609278864784,"results":"26","hashOfConfig":"23"},{"size":2614,"mtime":1609278864784,"results":"27","hashOfConfig":"23"},{"size":2753,"mtime":1609278864781,"results":"28","hashOfConfig":"23"},{"size":4195,"mtime":1609278864784,"results":"29","hashOfConfig":"23"},{"size":4720,"mtime":1609278864782,"results":"30","hashOfConfig":"23"},{"size":3912,"mtime":1609278864782,"results":"31","hashOfConfig":"23"},{"size":0,"mtime":1609278864784,"results":"32","hashOfConfig":"23"},{"size":451,"mtime":1609278864779,"results":"33","hashOfConfig":"23"},{"size":388,"mtime":1609278864700,"results":"34","hashOfConfig":"23"},{"size":397,"mtime":1609278864759,"results":"35","hashOfConfig":"23"},{"size":227,"mtime":1609278864758,"results":"36","hashOfConfig":"23"},{"size":827,"mtime":1609278864757,"results":"37","hashOfConfig":"23"},{"size":332,"mtime":1609278864758,"results":"38","hashOfConfig":"23"},{"size":283,"mtime":1609278864779,"results":"39","hashOfConfig":"23"},{"size":317,"mtime":1609278864777,"results":"40","hashOfConfig":"23"},{"size":124,"mtime":1609278864784,"results":"41","hashOfConfig":"23"},{"size":273,"mtime":1609278864785,"results":"42","hashOfConfig":"23"},{"size":9262,"mtime":1609289170598,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"18uhr12",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\academia-front\\src\\index.js",[],["93","94"],"C:\\academia-front\\src\\App.js",[],"C:\\academia-front\\src\\routes\\index.js",[],"C:\\academia-front\\src\\routes\\PrivateRoute.js",["95"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport Sidebar from '../components/Sidebar';\r\nimport { isAuthenticated } from '../services/auth';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <div className='row'>\r\n            <Sidebar />\r\n            <Component {...props} />\r\n          </div>\r\n        ) : (\r\n          // <Redirect\r\n          //   to={{ pathname: '/login', state: { from: props.location } }}\r\n          // />\r\n          <div className='row'>\r\n            <Sidebar />\r\n            <Component {...props} />\r\n          </div>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","C:\\academia-front\\src\\pages\\SignIn\\index.js",["96","97","98"],"import React, { useState, useCallback } from 'react';\r\nimport { ErrorMessage, Formik, Form, Field } from 'formik';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { login } from '../../api/auth';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\nimport { FiLogIn } from 'react-icons/fi';\r\n\r\nimport Logo from '../../assets/img/logo.png';\r\nimport LadSoft from '../../assets/img/ladsoft.png';\r\n\r\nimport './SignIn.css';\r\n\r\nconst schema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Insira um email válido')\r\n    .required('Favor informar o email cadastrado'),\r\n  password: Yup.string().min(6, 'A senha deve ter no mínimo 6 caracteres'),\r\n});\r\n\r\nexport default function SignIn() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = useCallback(async (data) => {\r\n    console.log('data', data);\r\n    try {\r\n      await schema.validate(data, { abortEarly: false });\r\n      // login(email, password);\r\n      history.push('/profile');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className='signinbg'>\r\n      <img src={Logo} alt='Ladfit' className='signinLogo' />\r\n      <div className='signinContainer'>\r\n        <p className='signinTxt'>Faça o Login para acessar o sistema.</p>\r\n\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          onSubmit={(data) => handleSubmit(data)}\r\n          validationSchema={schema}\r\n        >\r\n          <Form className='signinForm'>\r\n            <Field type='text' label='E-mail' name='email' as={Input} />\r\n            <ErrorMessage\r\n              component='span'\r\n              name='email'\r\n              className='validationInput'\r\n            />\r\n\r\n            <Field type='password' label='Senha' name='password' as={Input} />\r\n            <ErrorMessage\r\n              component='span'\r\n              name='password'\r\n              className='validationInput'\r\n            />\r\n\r\n            <Button disabled={loading}>\r\n              <FiLogIn />\r\n              {loading ? 'Carregando...' : 'ENTRAR'}\r\n            </Button>\r\n          </Form>\r\n        </Formik>\r\n\r\n        <p className='signinTxt'>Esqueci a minha senha.</p>\r\n\r\n        <div className='yellowLine'></div>\r\n\r\n        <p className='signinTxt'>Ainda não tem sua conta?</p>\r\n        <Link to='/signup' className='signinTxt'>\r\n          Faça o seu cadastro aqui!\r\n        </Link>\r\n\r\n        <img src={LadSoft} alt='LadSoft' className='signinLad' />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\academia-front\\src\\pages\\Home\\index.js",[],"C:\\academia-front\\src\\pages\\SignUp\\index.js",["99","100"],"import React, { useState, useCallback } from 'react';\r\nimport { ErrorMessage, Formik, Form, Field } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nimport './SignUp.css';\r\nimport Checkbox from '../../components/Checkbox';\r\n\r\nconst schema = Yup.object().shape({\r\n  firstName: Yup.string().required('Favor informar o seu nome'),\r\n  lastName: Yup.string().required('Favor informar o seu sobrenome'),\r\n  email: Yup.string()\r\n    .email('Insira um email válido')\r\n    .required('Favor informar o email cadastrado'),\r\n  password: Yup.string()\r\n    .min(6, 'A senha deve ter no mínimo 6 caracteres')\r\n    .required('Favor informar uma senha'),\r\n  confirmPassword: Yup.string()\r\n    .min(6, 'A senha deve ter no mínimo 6 caracteres')\r\n    .required('Favor confirmar a sua senha'),\r\n  securityKey: Yup.string()\r\n    .min(6, 'A chave de segurança tem ao menos 6 caracteres')\r\n    .nullable(),\r\n});\r\n\r\nexport default function SignUp() {\r\n  const handleSubmit = useCallback(async (data) => {\r\n    console.log('data', data);\r\n    try {\r\n      await schema.validate(data, { abortEarly: false });\r\n      // login(email, password);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className='signinbg'>\r\n      <div className='signinContainer'>\r\n        <p className='signinTxt'>Faça o seu cadastro.</p>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            instructor: null,\r\n            securityKey: null,\r\n          }}\r\n          onSubmit={(data) => handleSubmit(data)}\r\n          validationSchema={schema}\r\n        >\r\n          {({ values }) => (\r\n            <Form className='signinForm'>\r\n              <Field type='text' name='firstName' as={Input} label='Nome' />\r\n              <ErrorMessage\r\n                component='span'\r\n                name='firstName'\r\n                className='validationInput'\r\n              />\r\n              <Field type='text' name='lastName' as={Input} label='Sobrenome' />\r\n              <ErrorMessage\r\n                component='span'\r\n                name='lastName'\r\n                className='validationInput'\r\n              />\r\n              <Field type='email' name='email' as={Input} label='E-mail' />\r\n              <ErrorMessage\r\n                component='span'\r\n                name='email'\r\n                className='validationInput'\r\n              />\r\n              <Field type='password' name='password' as={Input} label='Senha' />\r\n              <ErrorMessage\r\n                component='span'\r\n                name='password'\r\n                className='validationInput'\r\n              />\r\n              <Field\r\n                type='password'\r\n                name='confirmPassword'\r\n                as={Input}\r\n                label='Confirmar senha'\r\n              />\r\n              <ErrorMessage\r\n                component='span'\r\n                name='confirmPassword'\r\n                className='validationInput'\r\n              />\r\n              <div className='row'>\r\n                <label htmlFor='instructor' className='checkboxLabel'>\r\n                  É instrutor?\r\n                </label>\r\n                <Field type='checkbox' name='instructor' id='instructor' />\r\n              </div>\r\n              {values.instructor && (\r\n                <>\r\n                  <Field\r\n                    type='text'\r\n                    name='securityKey'\r\n                    as={Input}\r\n                    label='Chave de segurança para instrutores'\r\n                  />\r\n                  <ErrorMessage\r\n                    component='span'\r\n                    name='securityKey'\r\n                    className='validationInput'\r\n                  />\r\n                </>\r\n              )}\r\n              <Button>CADASTRAR</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n        <Link to='/login' className='signinTxt'>\r\n          Fazer o login\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\academia-front\\src\\pages\\Profile\\UserProfile\\index.js",["101","102","103","104","105","106"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport * as Yup from 'yup';\r\nimport * as DateFns from 'date-fns';\r\nimport Avatar from '../../../assets/img/account_box.svg';\r\nimport { FaCamera } from 'react-icons/fa';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport Input from '../../../components/Input';\r\n\r\nimport './UserProfile.css';\r\nimport Checkbox from '../../../components/Checkbox';\r\nimport RadioButton from '../../../components/RadioButton';\r\nimport TextArea from '../../../components/TextArea';\r\nimport Button from '../../../components/Button';\r\n\r\nconst schema = Yup.object().shape({\r\n  birthday: Yup.string().required('Favor informar a data de nascimento'),\r\n  gender: Yup.string().required('Favor informar o gênero'),\r\n  phone: Yup.string(),\r\n  motivation: Yup.string().required('Favor informar a motivação'),\r\n  healthCondition: Yup.string(),\r\n  weight: Yup.number()\r\n    .positive('Favor informar um peso válido')\r\n    .required('Favor informar o peso atual'),\r\n  height: Yup.number()\r\n    .positive('Favor informar uma altura válida')\r\n    .required('Favor informar a altura'),\r\n  availability: Yup.number()\r\n    .positive('Favor informar um valor válido')\r\n    .required(\r\n      'Favor informar quantos dias na semana tem disponível para treinos'\r\n    ),\r\n});\r\n\r\nexport default function Profile() {\r\n  const initialValues = {\r\n    birthday: null,\r\n    gender: null,\r\n    phone: null,\r\n    motivation: null,\r\n    healthCondition: null,\r\n    weight: null,\r\n    height: null,\r\n    availability: null,\r\n  };\r\n\r\n  const handleSubmit = useCallback(async (data) => {\r\n    console.log('data', data);\r\n    try {\r\n      await schema.validate(data, { abortEarly: false });\r\n      // login(email, password);\r\n      // history.push('/profile');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className='profilebg'>\r\n      <div className='signinContainer'>\r\n        <div className='profileContainer'>\r\n          <div className='userPicture'>\r\n            <div className='avatarContainer'>\r\n              <img src={Avatar} alt='User Picture' className='avatar' />\r\n            </div>\r\n\r\n            <button className='avatarBtn'>Apagar foto</button>\r\n          </div>\r\n\r\n          <div className='userData'>\r\n            <h1 className='userName'>Paulo Lima</h1>\r\n\r\n            <Formik\r\n              initialValues={initialValues}\r\n              onSubmit={(data) => handleSubmit(data)}\r\n              validationSchema={schema}\r\n            >\r\n              <Form className='profileForm'>\r\n                <Field\r\n                  type='date'\r\n                  label='Data de nascimento'\r\n                  name='birthday'\r\n                  as={Input}\r\n                />\r\n                <label className='genderLabel'>\r\n                  Gênero\r\n                  <div className='row'>\r\n                    <Field\r\n                      type='radio'\r\n                      id='male'\r\n                      name='gender'\r\n                      value='male'\r\n                      label='Masculino'\r\n                      as={RadioButton}\r\n                    />\r\n\r\n                    <Field\r\n                      type='radio'\r\n                      id='female'\r\n                      name='gender'\r\n                      value='female'\r\n                      label='Feminino'\r\n                      as={RadioButton}\r\n                    />\r\n                  </div>\r\n                </label>\r\n                <Field\r\n                  type='number'\r\n                  min='0'\r\n                  label='Peso'\r\n                  name='weight'\r\n                  as={Input}\r\n                />\r\n                <Field\r\n                  type='number'\r\n                  min='0'\r\n                  label='Altura'\r\n                  name='height'\r\n                  as={Input}\r\n                />\r\n                <Field type='text' label='Telefone' name='phone' as={Input} />\r\n                <Field\r\n                  type='text'\r\n                  label='Motivação'\r\n                  name='motivation'\r\n                  as={Input}\r\n                />\r\n                <Field\r\n                  type='number'\r\n                  min='0'\r\n                  label='Disponibilidade semanal'\r\n                  name='availability'\r\n                  as={Input}\r\n                />\r\n                <Field\r\n                  type='text'\r\n                  label='Histórico de saúde/Lesões'\r\n                  name='healthCondition'\r\n                  as={TextArea}\r\n                />\r\n              </Form>\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n        <Button>ATUALIZAR PERFIL</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\academia-front\\src\\pages\\Profile\\InstructorProfile\\index.js",["107","108","109","110","111","112","113"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport * as Yup from 'yup';\r\nimport * as DateFns from 'date-fns';\r\nimport Avatar from '../../../assets/img/account_box.svg';\r\nimport { FaCamera } from 'react-icons/fa';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport Input from '../../../components/Input';\r\n\r\nimport './InstructorProfile.css';\r\nimport Checkbox from '../../../components/Checkbox';\r\nimport RadioButton from '../../../components/RadioButton';\r\nimport TextArea from '../../../components/TextArea';\r\nimport Button from '../../../components/Button';\r\n\r\nconst schema = Yup.object().shape({\r\n  birthday: Yup.string().required('Favor informar a data de nascimento'),\r\n  gender: Yup.string().required('Favor informar o gênero'),\r\n  phone: Yup.string(),\r\n  motivation: Yup.string().required('Favor informar a motivação'),\r\n  healthCondition: Yup.string(),\r\n  weight: Yup.number()\r\n    .positive('Favor informar um peso válido')\r\n    .required('Favor informar o peso atual'),\r\n  height: Yup.number()\r\n    .positive('Favor informar uma altura válida')\r\n    .required('Favor informar a altura'),\r\n  availability: Yup.number()\r\n    .positive('Favor informar um valor válido')\r\n    .required(\r\n      'Favor informar quantos dias na semana tem disponível para treinos'\r\n    ),\r\n});\r\n\r\nexport default function Profile() {\r\n  const initialValues = {\r\n    birthday: null,\r\n    gender: null,\r\n    phone: null,\r\n    motivation: null,\r\n    healthCondition: null,\r\n    weight: null,\r\n    height: null,\r\n    availability: null,\r\n  };\r\n\r\n  const handleSubmit = useCallback(async (data) => {\r\n    console.log('data', data);\r\n    try {\r\n      await schema.validate(data, { abortEarly: false });\r\n      // login(email, password);\r\n      // history.push('/profile');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className='profilebg'>\r\n      <div className='signinContainer'>\r\n        <div className='profileContainer'>\r\n          <div className='userPicture'>\r\n            <div className='avatarContainer'>\r\n              <img src={Avatar} alt='User Picture' className='avatar' />\r\n            </div>\r\n\r\n            <button className='avatarBtn'>Apagar foto</button>\r\n          </div>\r\n\r\n          <div className='userData'>\r\n            <h1 className='userName'>Felipe Monteiro</h1>\r\n\r\n            <Formik\r\n              initialValues={initialValues}\r\n              onSubmit={(data) => handleSubmit(data)}\r\n              validationSchema={schema}\r\n            >\r\n              <Form className='profileForm'>\r\n                <Field\r\n                  type='date'\r\n                  label='Data de nascimento'\r\n                  name='birthday'\r\n                  as={Input}\r\n                />\r\n                <label className='genderLabel'>\r\n                  Gênero\r\n                  <div className='row'>\r\n                    <Field\r\n                      type='radio'\r\n                      id='male'\r\n                      name='gender'\r\n                      value='male'\r\n                      label='Masculino'\r\n                      as={RadioButton}\r\n                    />\r\n\r\n                    <Field\r\n                      type='radio'\r\n                      id='female'\r\n                      name='gender'\r\n                      value='female'\r\n                      label='Feminino'\r\n                      as={RadioButton}\r\n                    />\r\n                  </div>\r\n                </label>\r\n\r\n                <Field type='text' label='Telefone' name='phone' as={Input} />\r\n                <Field\r\n                  type='text'\r\n                  label='Número de matrícula'\r\n                  name='studentId'\r\n                  as={Input}\r\n                />\r\n              </Form>\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n        <Button>ATUALIZAR PERFIL</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\academia-front\\src\\services\\auth.js",[],"C:\\academia-front\\src\\components\\Sidebar\\index.js",[],"C:\\academia-front\\src\\api\\auth.js",["114"],"import Api from '../services/api';\r\nimport { setAuthenticated, logout } from '../services/auth';\r\n\r\nexport async function login(email, password) {\r\n  const { data } = await Api.post('/session', { email, password });\r\n  const { token, user } = data;\r\n  setAuthenticated(token, user);\r\n}\r\n\r\nexport const loginWithToken = async (token) => {\r\n  await Api.post('/session/me', { token });\r\n};\r\n","C:\\academia-front\\src\\components\\Input\\index.js",[],"C:\\academia-front\\src\\components\\Button\\index.js",[],"C:\\academia-front\\src\\components\\AthleteCard\\index.js",[],"C:\\academia-front\\src\\components\\Checkbox\\index.js",[],"C:\\academia-front\\src\\components\\TextArea\\index.js",[],"C:\\academia-front\\src\\components\\RadioButton\\index.js",[],"C:\\academia-front\\src\\services\\api.js",[],"C:\\academia-front\\src\\utils\\index.js",[],"C:\\academia-front\\src\\pages\\Quiz\\index.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":17,"nodeType":"121","messageId":"122","endLine":2,"endColumn":25},{"ruleId":"119","severity":1,"message":"123","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":15},{"ruleId":"119","severity":1,"message":"124","line":26,"column":19,"nodeType":"121","messageId":"122","endLine":26,"endColumn":29},{"ruleId":"125","severity":1,"message":"126","line":37,"column":6,"nodeType":"127","endLine":37,"endColumn":8,"suggestions":"128"},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"130","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":16},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"131","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"132","line":3,"column":13,"nodeType":"121","messageId":"122","endLine":3,"endColumn":20},{"ruleId":"119","severity":1,"message":"133","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":18},{"ruleId":"119","severity":1,"message":"130","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":63,"column":15,"nodeType":"136","endLine":63,"endColumn":73},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"131","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"132","line":3,"column":13,"nodeType":"121","messageId":"122","endLine":3,"endColumn":20},{"ruleId":"119","severity":1,"message":"133","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":18},{"ruleId":"119","severity":1,"message":"130","line":10,"column":8,"nodeType":"121","messageId":"122","endLine":10,"endColumn":16},{"ruleId":"119","severity":1,"message":"137","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":63,"column":15,"nodeType":"136","endLine":63,"endColumn":73},{"ruleId":"119","severity":1,"message":"138","line":2,"column":28,"nodeType":"121","messageId":"122","endLine":2,"endColumn":34},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'login' is defined but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'useState' is defined but never used.","'Checkbox' is defined but never used.","'useEffect' is defined but never used.","'DateFns' is defined but never used.","'FaCamera' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'TextArea' is defined but never used.","'logout' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [history]",{"range":"144","text":"145"},[1146,1148],"[history]"]